name: CI

on: ["push", "pull_request"]

env:
  PRIMARY_NODE_VERSION: 18

jobs:
  install:
    name: Checkout and install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}

  packages:
    name: Get packages
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.packages.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get packages
        uses: sergeysova/jq-action@v2
        id: packages
        with:
          cmd: ls -d packages/*/ | cut -f2 -d'/' | jq -R -s -c 'split("\n") | .[0:-1]'

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs:
      - install
      - packages
    strategy:
      matrix:
        package: ${{ fromJSON(needs.packages.outputs.packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: ${{ matrix.package }}
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Lint
        run: pnpm --filter ${{ matrix.package }} lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs:
      - install
      - packages
    strategy:
      matrix:
        node-version: [14, 16, 18]
        package: ${{ fromJSON(needs.packages.outputs.packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: ${{ matrix.package }}
          node-version: ${{ matrix.node-version }}
      - name: Test
        if: ${{ matrix.node-version != env.PRIMARY_NODE_VERSION }}
        run: pnpm --filter ${{ matrix.package }} test
      - name: Test (coverage)
        if: ${{ matrix.node-version == env.PRIMARY_NODE_VERSION }}
        run: pnpm --filter ${{ matrix.package }} test:coverage
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v2
        if: ${{ matrix.node-version == env.PRIMARY_NODE_VERSION }}
        with:
          name: coverage-${{ matrix.package }}
          path: coverage

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    needs:
      - install
      - packages
    strategy:
      matrix:
        package: ${{ fromJSON(needs.packages.outputs.packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: ${{ matrix.package }}
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Typecheck
        run: pnpm --filter ${{ matrix.package }} typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - install
      - packages
      - lint
      - test
      - typecheck
    strategy:
      matrix:
        package: ${{ fromJSON(needs.packages.outputs.packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: ${{ matrix.package }}
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Build
        run: pnpm --filter ${{ matrix.package }} build
      - name: Replace GitHub with NPM
        run: sed -i 's/on GitHub/on NPM/g' packages/${{ matrix.package }}/README.md
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.package }}
          path: |
            packages/${{ matrix.package }}/dist
            packages/${{ matrix.package }}/mjs
            packages/${{ matrix.package }}/package.json
            packages/${{ matrix.package }}/LICENSE.md
            packages/${{ matrix.package }}/README.md

  coverage:
    name: Upload coverage
    runs-on: ubuntu-latest
    needs:
      - packages
      - test
    strategy:
      matrix:
        package: ${{ fromJSON(needs.packages.outputs.packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage-${{ matrix.package }}
          path: packages/${{ matrix.package }}/coverage
      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          files: packages/${{ matrix.package }}/coverage/lcov.info
          flags: ${{ matrix.package }}

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    needs:
      - packages
      - build
    strategy:
      matrix:
        package: ${{ fromJSON(needs.packages.outputs.packages) }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build-${{ matrix.package }}
      - name: Check for version changes
        uses: EndBug/version-check@v2
        id: check
        with:
          file-name: packages/${{ matrix.package }}/package.json
      - name: Set job status
        if: steps.check.outputs.changed == 'false'
        run: echo "::set-output name=status::skip"
      - name: Move dist/ to /
        if: steps.check.outputs.changed == 'true'
        working-directory: packages/${{ matrix.package }}
        run: |
          mv ./dist/* ./
          rm -rf ./dist/
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - name: Publish to NPM
        working-directory: packages/${{ matrix.package }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
