# This file is automatically generated, do not edit manually!
# To regenerate it, run 'pnpm run build:workflow'

name: CI
on:
  - push
  - pull_request
env:
  PRIMARY_NODE_VERSION: 18
jobs:
  install:
    name: Checkout and install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
  lint-eslint-plugin-vality:
    name: Lint eslint-plugin-vality
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: eslint-plugin-vality
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Lint
        run: pnpm --filter eslint-plugin-vality run lint
  test-eslint-plugin-vality:
    name: Test eslint-plugin-vality
    runs-on: ubuntu-latest
    needs:
      - install
    strategy:
      matrix:
        node-version:
          - 14
          - 16
          - 18
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: eslint-plugin-vality
          node-version: ${{ matrix.node-version }}
      - name: Test
        if: ${{ matrix.node-version != env.PRIMARY_NODE_VERSION }}
        run: pnpm --filter eslint-plugin-vality run test
      - name: Test (coverage)
        if: ${{ matrix.node-version == env.PRIMARY_NODE_VERSION }}
        run: pnpm --filter eslint-plugin-vality run test:coverage
      - name: Upload coverage artifact
        if: ${{ matrix.node-version == env.PRIMARY_NODE_VERSION }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-eslint-plugin-vality
          path: ./packages/eslint-plugin-vality/coverage
  typecheck-eslint-plugin-vality:
    name: Typecheck eslint-plugin-vality
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: eslint-plugin-vality
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Typecheck
        run: pnpm --filter eslint-plugin-vality run typecheck
  build-eslint-plugin-vality:
    name: Build eslint-plugin-vality
    runs-on: ubuntu-latest
    needs:
      - lint-eslint-plugin-vality
      - test-eslint-plugin-vality
      - typecheck-eslint-plugin-vality
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: eslint-plugin-vality
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Build
        run: pnpm --filter eslint-plugin-vality run build
      - name: Replace 'on GitHub' with 'on NPM'
        run: sed -i 's/on GitHub/on NPM/g' ./packages/eslint-plugin-vality/README.md
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-eslint-plugin-vality
          path: |-
            ./packages/eslint-plugin-vality/dist
            ./packages/eslint-plugin-vality/mjs
            ./packages/eslint-plugin-vality/package.json
            ./packages/eslint-plugin-vality/README.md
            ./packages/eslint-plugin-vality/LICENSE.json
  coverage-eslint-plugin-vality:
    name: Upload coverage eslint-plugin-vality
    runs-on: ubuntu-latest
    needs:
      - test-eslint-plugin-vality
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage-eslint-plugin-vality
          path: ./packages/eslint-plugin-vality/coverage
      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./packages/eslint-plugin-vality/coverage/lcov.info
          flags: eslint-plugin-vality
  check-version-eslint-plugin-vality:
    name: Check version eslint-plugin-vality
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    outputs:
      should-publish: ${{ steps.check.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check for version changes
        id: check
        uses: EndBug/version-check@v2
      - name: Set job status
        if: ${{ steps.check.outputs.changed == 'false' }}
        run: echo "::set-output name=status::skip"
  publish-eslint-plugin-vality:
    name: Publish eslint-plugin-vality
    runs-on: ubuntu-latest
    needs:
      - build-eslint-plugin-vality
      - check-version-eslint-plugin-vality
    if: ${{ needs.check-version-eslint-plugin-vality.outputs.should-publish ==
      'true' }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-eslint-plugin-vality
          path: ./packages/eslint-plugin-vality
      - name: Move dist/ to /
        working-directory: ./packages/eslint-plugin-vality
        run: |-
          mv ./dist/* ./
          rm -rf ./dist
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Publish to NPM
        working-directory: ./packages/eslint-plugin-vality
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  lint-vality:
    name: Lint vality
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: vality
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Lint
        run: pnpm --filter vality run lint
  test-vality:
    name: Test vality
    runs-on: ubuntu-latest
    needs:
      - install
    strategy:
      matrix:
        node-version:
          - 14
          - 16
          - 18
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: vality
          node-version: ${{ matrix.node-version }}
      - name: Test
        if: ${{ matrix.node-version != env.PRIMARY_NODE_VERSION }}
        run: pnpm --filter vality run test
      - name: Test (coverage)
        if: ${{ matrix.node-version == env.PRIMARY_NODE_VERSION }}
        run: pnpm --filter vality run test:coverage
      - name: Upload coverage artifact
        if: ${{ matrix.node-version == env.PRIMARY_NODE_VERSION }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-vality
          path: ./packages/vality/coverage
  typecheck-vality:
    name: Typecheck vality
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: vality
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Typecheck
        run: pnpm --filter vality run typecheck
  build-vality:
    name: Build vality
    runs-on: ubuntu-latest
    needs:
      - lint-vality
      - test-vality
      - typecheck-vality
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          package: vality
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Build
        run: pnpm --filter vality run build
      - name: Replace 'on GitHub' with 'on NPM'
        run: sed -i 's/on GitHub/on NPM/g' ./packages/vality/README.md
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-vality
          path: |-
            ./packages/vality/dist
            ./packages/vality/mjs
            ./packages/vality/package.json
            ./packages/vality/README.md
            ./packages/vality/LICENSE.json
  coverage-vality:
    name: Upload coverage vality
    runs-on: ubuntu-latest
    needs:
      - test-vality
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage-vality
          path: ./packages/vality/coverage
      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./packages/vality/coverage/lcov.info
          flags: vality
  check-version-vality:
    name: Check version vality
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    outputs:
      should-publish: ${{ steps.check.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check for version changes
        id: check
        uses: EndBug/version-check@v2
      - name: Set job status
        if: ${{ steps.check.outputs.changed == 'false' }}
        run: echo "::set-output name=status::skip"
  publish-vality:
    name: Publish vality
    runs-on: ubuntu-latest
    needs:
      - build-vality
      - check-version-vality
    if: ${{ needs.check-version-vality.outputs.should-publish == 'true' }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-vality
          path: ./packages/vality
      - name: Move dist/ to /
        working-directory: ./packages/vality
        run: |-
          mv ./dist/* ./
          rm -rf ./dist
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Publish to NPM
        working-directory: ./packages/vality
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
